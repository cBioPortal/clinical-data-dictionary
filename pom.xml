<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <name>Clinical Data Dictionary</name>
  <description>Clinical Attribute Web Service for retrieving clinical attribute names and metadata.</description>
  <url>https://github.com/cBioPortal/clinical-data-dictionary/</url>
  <groupId>org.cbioportal.cdd</groupId>
  <artifactId>cdd</artifactId>
  <version>0.2.0</version>
  <packaging>${packaging.type}</packaging>

  <!-- inherit defaults from spring boot -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.20.RELEASE</version>
  </parent>

  <properties>
    <java.version>1.8</java.version>
    <spring.version>5.1.7.RELEASE</spring.version>
  </properties>

  <profiles>
    <profile>
      <id>war</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <packaging.type>war</packaging.type>
      </properties>
    </profile>
    <profile>
      <id>jar</id>
      <properties>
        <packaging.type>jar</packaging.type>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-validator</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <!-- Spring caching framework inside this -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- Support for Ehcache and others -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
      <type>jar</type>
    </dependency>


    <!--
        Don't you dare remove the jackson-annotations depdendency exclusion.
        You have been warned.
        Yes, the explicit declaration of the jackson-annotations dependency
        following jackson-databind was intentional due to conflicting jackson
        dependency issues.
    -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.9.10.5</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.9.0</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.5.0</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.8.1</version>
    </dependency>
    <!-- google -->
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson</artifactId>
      <version>1.19.0</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
    </dependency>

    <!-- slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <version>1.3</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-nop</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- EHCache -->
    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>3.7.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/javax.cache/cache-api -->
    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>cdd</finalName>
    <filters>
        <filter>src/main/resources/application.properties</filter>
        <filter>src/test/resources/test.application.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
            <include>**/application.properties</include>
            <include>**/ehcache.xml</include>
            <include>**/ehcache_backup.xml</include>
            <include>**/log4j.properties</include>
        </includes>
      </resource>
    </resources>
    <!-- enable filtering on test resources -->
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
            <include>**/test.application.properties</include>
            <include>**/log4j.properties</include>
            <include>**/ehcache.xml</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <!-- maven resources plugin
        Note: Delimiter configuration is explicitly declared
        due to this project being a spring boot application,
        which, since 1.7 expects placeholders in XML / other
        configuration files to begin and end with '@' isntead
        of ${...}. Also note that this specification does not
        affect the injected properties in Java classes which
        can still be autowired in with ${...} regardless.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <delimiters>
            <delimiter>${*}</delimiter>
          </delimiters>
          <overwrite>true</overwrite>
        </configuration>
      </plugin>
      <!-- maven war plugin lets us copy the ehcache configuration file
           as a classpath resource for the final packaged war -->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/resources</directory>
              <targetPath>WEB-INF/classes</targetPath>
              <includes>
                <include>**/ehcache.xml</include>
              </includes>
              <filtering>true</filtering>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
